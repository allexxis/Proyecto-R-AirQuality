l <- list(TRUE,123.2,33,21,22)
l
demo*()
demo()
x<- 123
x
df <- data.frame(
nombre = c("Gato","Perro", "Vaca", "Cerdo"),
cuantos = c(12,33,44,55),
esPet = c(TRUE,TRUE,FALSE,FALSE))
df
shiny::runApp('GitHub/MoviesWithR/MovieWebApp')
#Create Frequency table for Director Names
countOfDirectorsXMov <- table(Dtframe$director_name)
sortDirector <- sort(countOfDirectorsXMov, decreasing = TRUE)
sortDirector
runApp('GitHub/MoviesWithR/MovieWebApp')
tDir <- as.data.frame.matrix(sortDirector)
tDir <- as.data.frame(sortDirector)
tDir
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
tDir <- as.data.frame(sortDirector)
tDir
sortDirector <- as.data.frame(sort(countOfDirectorsXMov, decreasing = TRUE))
sortDirector
require(data.table)
require(dplyr)
require(DT)
require(readr)
require(ggplot2)
## Data Source Variables
DocName <- "movie_metadata.csv"       # Document Name with extension
MyData <- paste0("./data/",DocName)   # Path for Data Source
MoviesDf <- read.csv(MyData)
#Create Frequency table for Director Names
countOfDirectorsXMov <- table(Dtframe$director_name)
sortDirector <- as.data.frame(sort(countOfDirectorsXMov, decreasing = TRUE))
str(sortDirector)
shiny::runApp('GitHub/MoviesWithR/MovieWebApp')
#Select only needed columns
t1 <- select(
.data = MoviesDf,
director_name,
gross,
genres,
movie_title,
budget,
country,
title_year
)
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
#Select only needed columns
t1 <- select(
.data = MoviesDf,
director_name,
gross,
genres,
movie_title,
budget,
country,
title_year
)
#filter, remove blank director names
t2 <- filter(
.data = t1,
director_name != ""
)
#mutate, create new column profit
t3 <- mutate(
.data = t2,
profit = as.numeric(gsub('[$,]', '', gross)) -
as.numeric(gsub('[$,]', '', budget))
)
head(t3)
#group by director name
t4 <- group_by(
.data = t3,
director_name
)
head(t4)
#Aggregate base on groups
t5 <- summarize(
.data = t4,
total_movies =n(),
total_profit = sum(profit)
)
#Order by total of movies in descendent order
t6 <- arrange(t5,desc(total_movies))
ggplot(data = head(t6,10)) +
geom_bar(mapping = aes(x = director_name, y = total_movies , fill=director_name), stat = "identity")
ggplot(data = head(t6,10)) +
geom_point(mapping = aes(x = director_name, y = total_movies , fill=director_name), stat = "identity")
ggplot(data = head(t6,10)) +
geom_bar(mapping = aes(x = director_name, y = total_movies , fill=director_name), stat = "identity")
View(t6)
head(t6)
#Order by total of movies in descendent order
dirSortTotMovies <- arrange(t5,desc(total_movies))
head(dirSortTotMovies)
dirSortTotProfit <- arrange(t5,desc(total_profit))
head(dirSortTotProfit)
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
runApp('GitHub/MoviesWithR/MovieWebApp')
setwd("C:/Users/Javier/Google Drive/IBM/CapstoneG2/AirQualityUCI")
install.packages("tm")
install.packages("SnowballC")
install.packages("wordcloud")
install.packages("RColorBrewer")
DocName <- "AirQualityUCI.csv"       # Document Name with extension
datos <- read.csv(DocName)
DocName <- "AirQualityUCI.csv"       # Document Name with extension
datos <- read.csv(DocName, sep = ";")
View(datos)
install.packages("readr")
setwd("C:/Users/Javier/Google Drive/IBM/CapstoneG2/AirQualityUCI")
str(datos)
datos <- datos[ ,17]
str(datos)
DocName <- "AirQualityUCI.csv"       # Document Name with extension
datos <- read.csv(DocName, sep = ";")
str(datos)
datos <- datos[ ,-17]
str(datos)
DocName <- "AirQualityUCI.csv"       # Document Name with extension
datos <- read.csv(DocName, sep = ";")
datos <- datos[ ,-16]
str(datos)
datos <- read.csv(DocName, sep = ";")
datos <- datos[ ,c(-16,-17)]
str(datos)
colnames(datos)
colnames(datos)[3] <- "CO"
colnames(datos)
colnames(datos)
colnames(datos)[3] <- "CO"
colnames(datos)[4] <- "Sensor1"
colnames(datos)[5] <- "NMHC"
colnames(datos)[6] <- "C6H6"
colnames(datos)[7] <- "Sensor2"
colnames(datos)[8] <- "NOX"
colnames(datos)[9] <- "Sensor3"
colnames(datos)[10] <- "NO2"
colnames(datos)[11] <- "Sensor4"
colnames(datos)[12] <- "Sensor5"
colnames(datos)
